<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				width="100%"
				height="{SCHEDULE_ITEM_REPORTING_VIEW_HEIGHT}"
				autoDrawBackground="false"
		click="healthActionItemRenderer_clickHandler()">
	<fx:Style>

		#nameLabel {
			font-size: 30;
			font-weight: bold;
		}

		#descriptionLabel {
			font-size: 20;
		}

		#indicationLabel {
			fontSize: 20;
			fontStyle: italic;
		}

		#instructionsLabel {
			fontSize: 26;
			font-weight: bold;
		}

		#additionalInformationLabel {
			fontSize: 26;
			fontWeight: bold;
		}
	</fx:Style>
	<fx:Script>
	    <![CDATA[
		import collaboRhythm.plugins.healthActions.model.HealthActionsModel;
		import collaboRhythm.plugins.schedule.shared.controller.HealthActionListViewControllerBase;
		import collaboRhythm.plugins.schedule.shared.model.IHealthActionListViewAdapter;
		import collaboRhythm.plugins.schedule.shared.model.IHealthActionListViewController;
		import collaboRhythm.plugins.schedule.shared.model.IHealthActionListViewModel;

		import spark.components.Image;

		public static const SCHEDULE_ITEM_REPORTING_VIEW_HEIGHT:Number = 142;

		private var _isDataSet:Boolean = false;
		private var _scheduleItemOccurrenceReportingController:IHealthActionListViewController;

		override public function set data(value:Object):void
		{
			// This function gets called every time that the scheduleItemOccurrence is modified. This is problematic
			// because it adds the image every time that the user checks the adherenceCheckBox. It may be necessary
			// to write code that more specifically prevents the image from being added multiple times if other components
			// of the view need to be updated dynamically
			if (!_isDataSet)
			{
				super.data = value;

				var healthActionListViewAdapter:IHealthActionListViewAdapter = IHealthActionListViewAdapter(value);

				var healthActionsList:HealthActionsList = HealthActionsList(owner);
				var healthActionsModel:HealthActionsModel = healthActionsList.healthActionsModel;

				var scheduleItemOccurrenceReportingModel:IHealthActionListViewModel = healthActionListViewAdapter.model;
				_scheduleItemOccurrenceReportingController = healthActionListViewAdapter.controller;
				scheduleItemOccurrenceReportingModel.healthActionInputController = healthActionsModel.healthActionInputControllerFactory.createHealthActionInputController(healthActionListViewAdapter.healthAction,
						null, healthActionsModel, healthActionsList.healthActionsAppController.viewNavigator);

				nameLabel.text = healthActionListViewAdapter.name;
				descriptionLabel.text = healthActionListViewAdapter.description;
				indicationLabel.text = healthActionListViewAdapter.indication;
				instructionsLabel.text = healthActionListViewAdapter.instructions;

				var image:Image = healthActionListViewAdapter.image;
				if (image)
				{
					image.left = 5;
					image.right = 5;
					image.top = 5;
					image.bottom = 5;
					image.smooth = true;
					imageRegion.addElement(image);
				}

				_isDataSet = true;
			}
		}

		private function healthActionItemRenderer_clickHandler():void
		{
			_scheduleItemOccurrenceReportingController.handleHealthActionResult();
		}
		]]>
	    </fx:Script>

	<s:Group id="imageRegion" width="{this.height}" height="100%">

	</s:Group>

	<s:Group id="descriptionRegion" height="100%" left="{imageRegion.width}" right="0">
		<s:VGroup left="5" right="5" top="5" bottom="5" gap="1">
			<s:Label id="nameLabel" maxDisplayedLines="1" width="100%"/>
			<s:Label id="descriptionLabel" maxDisplayedLines="1" width="100%"/>
			<s:Label id="indicationLabel" paddingTop="16" maxDisplayedLines="1" width="100%"/>
			<s:Label id="instructionsLabel" paddingTop="16" maxDisplayedLines="1" width="100%"/>
		</s:VGroup>
	</s:Group>

	<s:Line width="100%" bottom="0">
		<s:stroke>
			<s:SolidColorStroke color="0x000000"/>
		</s:stroke>
	</s:Line>
</s:ItemRenderer>
