<?xml version="1.0" encoding="utf-8"?>
<!--~
  ~ Copyright 2011 John Moore, Scott Gilroy
  ~
  ~ This file is part of CollaboRhythm.
  ~
  ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  ~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  ~ version.
  ~
  ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  ~ <http://www.gnu.org/licenses/>.
  -->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" height="100%"
		 implements="collaboRhythm.plugins.bloodPressure.view.IBloodPressureWidgetView"
		>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		.tension 
		{
			font-size: 20;
		}
		
		#hypertensionLabel 
		{
			color: red;
			text-alpha: 0.5;
		} 
		
		#prehypertensionLabel 
		{
			color: "0xF7941E";
			text-alpha: 0.9;
		} 
		
		#normotensionLabel 
		{
			color: green;
			text-alpha: 0.5;
		} 
		
		#hypotensionLabel 
		{
			color: red;
			text-alpha: 0.5;
		}  
		
		.scale
		{
			font-size: 16;
		}
		
		#systolicLabel
		{
			font-size: 24;
		}
		
	</fx:Style>
	<fx:Script>
		<![CDATA[
		import collaboRhythm.plugins.bloodPressure.controller.BloodPressureAppController;
		import collaboRhythm.shared.apps.bloodPressure.model.BloodPressureModel;

		import mx.events.PropertyChangeEvent;

		public static const red:uint = 0xED1C24;
		public static const orange:uint = 0xF7941E;
		public static const green:uint = 0x00A651;

		[Bindable]
		private var _model:BloodPressureModel;

		public function get model():BloodPressureModel
		{
			return _model;
		}

		public function set model(value:BloodPressureModel):void
		{
			_model = value;
			refresh();

			_model.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, model_propertyChangeHandler);
		}

		private function model_propertyChangeHandler(event:PropertyChangeEvent):void
		{
			refresh();
		}

		public function updateBloodPressureHeight(simulationModelSystolic:Number):void
		{
			systolicLabel.text = String(simulationModelSystolic);

			if (simulationModelSystolic < 90)
			{
				bloodPressureRectFill.color = red;

				hypotensionRectFill.alpha = 0.5;
				normotensionRectFill.alpha = 0.10;
				prehypertensionRectFill.alpha = 0.10;
				hypertensionRectFill.alpha = 0.10;

				systolicLabel.setStyle("color", red);
			}
			else if (simulationModelSystolic < 120)
			{
				bloodPressureRectFill.color = green;

				hypotensionRectFill.alpha = 0.10;
				normotensionRectFill.alpha = 0.5;
				prehypertensionRectFill.alpha = 0.10;
				hypertensionRectFill.alpha = 0.10;

				systolicLabel.setStyle("color", green);
			}
			else if (simulationModelSystolic < 130)
			{
				bloodPressureRectFill.color = orange;

				hypotensionRectFill.alpha = 0.10;
				normotensionRectFill.alpha = 0.10;
				prehypertensionRectFill.alpha = 0.3;
				hypertensionRectFill.alpha = 0.10;

				systolicLabel.setStyle("color", orange);
			}
			else
			{
				bloodPressureRectFill.color = red;

				hypotensionRectFill.alpha = 0.10;
				normotensionRectFill.alpha = 0.10;
				prehypertensionRectFill.alpha = 0.10;
				hypertensionRectFill.alpha = 0.5;

				systolicLabel.setStyle("color", red);
			}

			bloodPressureRect.height = (simulationModelSystolic - 80) * (200 / 80);
		}

		public function refresh():void
		{
			if (_model != null && _model.currentSimulation != null && _model.isSystolicReportLoaded)
			{
				var simulationModelSystolic:Number = _model.currentSimulation.systolic;
				updateBloodPressureHeight(simulationModelSystolic);
			}
		}

		public function set controller(controller:BloodPressureAppController):void
		{
		}
		]]>
	</fx:Script>
	
	<s:Label id="systolicLabel" bottom="210" left="2"/>
	
	<s:Group left="10" bottom="10" width="180" height="200">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xFFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:VGroup width="180" height="100%" gap="0">
			<s:Group width="100%" height="37.5%">
				<s:Line width="100%" bottom="0">
					<s:stroke>
						<s:SolidColorStroke weight="0.5" color="0x000000" alpha="0.25"/>
					</s:stroke>
				</s:Line>
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor id="hypertensionRectFill" color="red" alpha="0.15"/>
					</s:fill>
				</s:Rect>
				<s:Label id="hypertensionLabel" styleName="tension" left="25" text="Hypertension" verticalCenter="0"/>
			</s:Group>
			<s:Group width="100%" height="12.5%">
				<s:Line width="100%"  bottom="0">
					<s:stroke>
						<s:SolidColorStroke weight="0.5" color="0x000000" alpha="0.25"/>
					</s:stroke>
				</s:Line>
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor id="prehypertensionRectFill" color="{orange}" alpha="0.15"/>
					</s:fill>
				</s:Rect>
				<s:Label id="prehypertensionLabel"  styleName="tension" left="25" text="Prehypertension" verticalCenter="0"/>
			</s:Group>
			<s:Group width="100%" height="37.5%">
				<s:Line width="100%"  bottom="0">
					<s:stroke>
						<s:SolidColorStroke weight="0.5" color="0x000000" alpha="0.25"/>
					</s:stroke>
				</s:Line>
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor id="normotensionRectFill" color="green" alpha="0.15"/>
					</s:fill>
				</s:Rect>
				<s:Label id="normotensionLabel"  styleName="tension" left="25" text="Normal" verticalCenter="0"/>
			</s:Group>
			<s:Group width="100%" height="12.5%">
				<s:Line width="100%" bottom="1">
					<s:stroke>
						<s:SolidColorStroke weight="0.5" color="0x000000" alpha="0.25"/>
					</s:stroke>
				</s:Line>
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor id="hypotensionRectFill" color="red" alpha="0.15"/>
					</s:fill>
				</s:Rect>
				<s:Label id="hypotensionLabel"  styleName="tension" left="25" text="Hypotension" verticalCenter="0"/>
			</s:Group>
		</s:VGroup>
		<s:Rect width="100%" height="100%">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="0x000000" alpha="0.25"/>
			</s:stroke>
		</s:Rect>
		<s:Rect id="bloodPressureRect" bottom="0" width="20">
			<s:fill>
				<s:SolidColor id="bloodPressureRectFill"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke weight="0.5" color="0x000000" alpha="0.25"/>
			</s:stroke>
		</s:Rect> 
		<s:Rect width="20" height="100%">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="0x000000"/>
			</s:stroke>
		</s:Rect>
	</s:Group>
</s:Group>
